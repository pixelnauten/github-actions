name: "Unit tests with PHPUnit"

on:
  workflow_call:
    inputs:
      php-versions:
        default: >-
          ['8.0']
        required: false
        type: string
      composer-dependencies:
        default: >-
          ['highest']
        required: false
        type: string
      composer-options:
        default: "--no-progress --no-interaction --no-ansi"
        required: false
        type: string
      database:
        default: ''
        required: false
        type: string
      database-populate-command:
        default: 'php tests/createDatabase.php'
        required: false
        type: string
      database-version:
        default: 'latest'
        required: false
        type: string
      database-name:
        default: 'database'
        required: false
        type: string
      elasticsearch:
        default: ''
        required: false
        type: string
      elasticsearch-version:
        default: '8.7.0'
        required: false
        type: string
    secrets:
      CODECOV_TOKEN:
        required: true
      PACKAGIST_USER:
        required: true
      PACKAGIST_TOKEN:
        required: true

jobs:
  phpunit:
    name: PHP ${{matrix.php-version}} with ${{matrix.composer-dependency}} dependencies
    runs-on: ${{matrix.operating-system}}
    strategy:
      matrix:
        php-version: ${{fromJson(inputs.php-versions)}}
        composer-dependency: ${{fromJson(inputs.composer-dependencies)}}
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{matrix.php-version}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auth with private packagist
        run: composer config --auth http-basic.repo.packagist.com ${{secrets.PACKAGIST_USER}} ${{secrets.PACKAGIST_TOKEN}}

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{matrix.composer-dependency}}
          composer-options: ${{inputs.composer-options}}

      - name: Stop default MySQL database
        if: inputs.database != ''
        run: sudo service mysql stop

      - name: Setup database MariaDB
        if: inputs.database == 'mariadb'
        uses: getong/mariadb-action@v1.1
        with:
          mariadb version: ${{inputs.database-version}}
          mysql database: ${{inputs.database-name}}
          mysql root password: ''

      - name: Wait for database
        if: inputs.database == 'mariadb'
        run: |
          while ! `mysqladmin ping -h 127.0.0.1 --silent`; do printf 'Waiting for database...\n'; sleep 1; done;
          mysql -h 127.0.0.1 -uroot -e 'SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,"ONLY_FULL_GROUP_BY",""))'

      - name: Populate database
        if: inputs.database != ''
        run: ${{inputs.database-populate-command}}

      - name: Configure sysctl limits for elasticsearch
        if: inputs.elasticsearch != ''
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Setup elasticsearch
        if: inputs.elasticsearch != ''
        uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: ${{inputs.elasticsearch-version}}
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'

      - name: Test
        run: vendor/bin/phpunit

      - name: Send code coverage report to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}